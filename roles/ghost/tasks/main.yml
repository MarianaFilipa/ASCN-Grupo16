---
- name: Create a namespace of the app Ghost
  kubernetes.core.k8s:
    name: ghost-namespace
    api_version: v1
    kind: Namespace
    state: present

- name: Create a Deployment object for Ghost
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: ghost-deployment # Name of the object
        namespace: default # ghost-namespace
        labels:
          app: ghost
      spec: # description of the characteristics of the resource: onde é definido o que este deployment object deverá ter
        replicas: 1 # There is only one object of this type
        selector: 
          matchLabels:
            app: ghost
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: ghost
          spec:
            containers:
            - name: ghost
              image: ghost:5 
              env: # The variables below could be set on a ConfigMap object
              - name: database__client
                value: mysql
              - name: database__connection__host # Create a database with this name
                value: db-service                         # IP database => pod db-service
                                                         # Porta a base de dados?
              - name: database__connection__user          # Create a user with this name
                value: "{{ ghost_db_user }}"
              - name: database__connection__password      # The user will use this password
                value: "{{ ghost_db_password }}"          # Use Secret object in real usage
              - name: database__connection__database      # Create a database with this name
                value: "{{ ghost_db_name }}"
              - name: url
                value: "http://{{ ghost_ip }}:{{ ghost_port }}"
              ports:
              - containerPort: 2368             # Container está exposto na porta 80
          
- name: Create a Service object for Ghost
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1   # Service for exposing Swap
      kind: Service # Create an object swap service.
      metadata:
        name: ghost-service
        namespace: default #ghost-namespace
        labels:
          app: ghost
      spec:
        type: LoadBalancer # Makes the service accessible on a static port on each Node in the cluster.
                       # This port on each node will lead to the swap-service?
        loadBalancerIP: "{{ ghost_ip }}"
        selector:
          app: ghost 
        ports:
                                      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
          - targetPort: 2368            # port that containers are listening on
            port: 2368                  # port exposed internally in the cluster
            name: http
